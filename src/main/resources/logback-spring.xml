<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <springProperty scope="context" name="appName" source="spring.application.name"/>
    <springProperty scope="context" name="logstashHost" source="elk.logstash.host" defaultValue="localhost"/>
    <springProperty scope="context" name="logstashPort" source="elk.logstash.port" defaultValue="5044"/>
    <springProperty scope="context" name="logstashConnectTimeout" source="elk.logstash.connect-timeout" defaultValue="5000"/>
    <springProperty scope="context" name="logstashQueueSize" source="elk.logstash.queue-size" defaultValue="512"/>

    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- File Appender for local logging -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/arbitrage-bot.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/arbitrage-bot-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- Spring Framework loggers -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.springframework.r2dbc" level="DEBUG"/>
    <logger name="io.r2dbc" level="DEBUG"/>

    <!-- Application loggers -->
    <logger name="com.berrx" level="DEBUG"/>

    <!-- ELK connectivity logger - только предупреждения -->
    <logger name="net.logstash.logback.appender.LogstashTcpSocketAppender" level="ERROR"/>

    <!-- Development profile: No ELK, только Console и File -->
    <springProfile name="default,dev">
        <!-- Specialized logger for arbitrage opportunities -->
        <logger name="com.berrx.arbitrage.OPPORTUNITIES" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>

        <!-- Specialized logger for execution -->
        <logger name="com.berrx.arbitrage.EXECUTION" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>

        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </root>
    </springProfile>

    <!-- Production/ELK profiles: включаем ELK appenders -->
    <springProfile name="prod,elk">
        <!-- Logstash Appender - создается только для prod/elk профилей -->
        <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
            <destination>${logstashHost}:${logstashPort}</destination>
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <customFields>{"app_name":"${appName}","app_version":"0.0.1"}</customFields>
                <includeMdc>true</includeMdc>
                <includeContext>true</includeContext>
                <includeCallerData>true</includeCallerData>
                <timeZone>UTC</timeZone>
            </encoder>
            <keepAliveDuration>5 minutes</keepAliveDuration>
            <connectionTimeout>${logstashConnectTimeout}</connectionTimeout>
        </appender>

        <!-- Async wrapper for Logstash to prevent blocking -->
        <appender name="ASYNC_LOGSTASH" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="LOGSTASH"/>
            <queueSize>${logstashQueueSize}</queueSize>
            <discardingThreshold>0</discardingThreshold>
            <includeCallerData>true</includeCallerData>
            <neverBlock>true</neverBlock>
        </appender>

        <!-- Specialized loggers with ELK -->
        <logger name="com.berrx.arbitrage.OPPORTUNITIES" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
            <appender-ref ref="ASYNC_LOGSTASH"/>
        </logger>

        <logger name="com.berrx.arbitrage.EXECUTION" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
            <appender-ref ref="ASYNC_LOGSTASH"/>
        </logger>

        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
            <appender-ref ref="ASYNC_LOGSTASH"/>
        </root>
    </springProfile>

</configuration>